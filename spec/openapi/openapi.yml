openapi: 3.0.0
servers:
  - description: local api
    url: http://localhost:8000
  - description: production api
    url: https://example.com
info:
  description: This is a Somnosus API
  version: "1.0.0"
  title: Somnosus API
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: accounts
    description: accounts endpoints
  - name: tweets
    description: tweets endpoints
  - name: likes
    description: likes endpoints
  - name: follows
    description: follows endpoints
paths:
  "/accounts/register":
    post:
      summary: "register account"
      tags: ["accounts"]
      deprecated: false
      requestBody:
        description: account to create
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterAccountPayload"
      responses:
        "201":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"
              example: 
                message: "OK!"
        "400":
          description: "bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "already exsisted account"
        "500":
          description: "internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "internal server error"
                
  "/accounts/update":
    put:
      summary: "update account profile"
      tags: ["accounts"]
      deprecated: false
      security: 
      - Bearer: []
      requestBody:
        description: account to update
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAccountPayload"
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"
              example: 
                message: "OK!"
        "403":
          description: "not authenticated"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "not authenticated"
        "404":
          description: "not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "account not found"
        "500":
          description: "internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "internal server error"

  "/accounts/@me":
    get:
      summary: "get my profile"
      tags: ["accounts"]
      deprecated: false
      security: 
      - Bearer: []
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
              example: 
                id: "123456789"
                name: "kizuku"
                description: "きｋっきっき"
                image_url: "https://s3.ap-northeast-1.wasabisys.com/mastodondb/accounts/avatars/000/005/339/original/d27fbbbd88ea05a4.jpg"
                birth_day: "2002-10-02"
                website_url: "https://github.com/K-Kizuku"      
        "403":
          description: "not authenticated"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "not authenticated"
        "404":
          description: "not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "account not found"
        "500":
          description: "internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "internal server error"

  "/accounts/{id}":
    get:
      summary: "get other profile"
      tags: ["accounts"]
      deprecated: false
      security: 
      - Bearer: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
              example: 
                id: "123456789"
                name: "kizuku"
                description: "きｋっきっき"
                image_url: "https://s3.ap-northeast-1.wasabisys.com/mastodondb/accounts/avatars/000/005/339/original/d27fbbbd88ea05a4.jpg"
                birth_day: "2002-10-02"
                website_url: "https://github.com/K-Kizuku"      
        "403":
          description: "not authenticated"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "not authenticated"
        "404":
          description: "not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "account not found"
        "500":
          description: "internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "internal server error"
            
  "/tweets/post":
    post:
      summary: "post tweet"
      tags: ["tweets"]
      deprecated: false
      security:
      - Bearer: []
      requestBody:
        description: tweet to delete
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTweetPayload"
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTweetResponse"
              example: 
                id: "9bb28458-056a-8a14-afab-8615f7aa0b57"
                content: "テスト投稿"
                image_url_list: ["https://s3.ap-northeast-1.wasabisys.com/mastodondb/accounts/avatars/000/005/339/original/d27fbbbd88ea05a4.jpg"]
                created_at: "2023-10-12T02:13:47.336Z"
                account_id: "123456789"
                reply_to: "bc2fca8c-c3d4-5200-edba-58858f596b89"
                root: "9aeac4f3-ebb1-703e-8d66-274dd189983b"
        "400":
          description: "bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "post bad request"
        "403":
          description: "not authenticated"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "not authenticated"
        "500":
          description: "internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "internal server error"
  "/tweets/delete/{id}":
    delete:
      summary: "delete tweet"
      tags: ["tweets"]
      deprecated: false
      security:
      - Bearer: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"
              example: 
                message: "OK!"
        "404":
          description: "not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "tweet not found"
        "403":
          description: "not authenticated"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "not authenticated"
        "500":
          description: "internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "internal server error"

  "/tweets/get/timeline":
    get:
      summary: "get TL"
      tags: ["tweets"]
      deprecated: false
      security:
      - Bearer: []
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTweetResponse"
              example: 
                timeline: 
                  - id: "9bb28458-056a-8a14-afab-8615f7aa0b57"
                    content: "テスト投稿"
                    image_url_list: ["https://s3.ap-northeast-1.wasabisys.com/mastodondb/accounts/avatars/000/005/339/original/d27fbbbd88ea05a4.jpg"]
                    created_at: "2023-10-12T02:13:47.336Z"
                    account_id: "123456789"
                    reply_to: "bc2fca8c-c3d4-5200-edba-58858f596b89"
                    root: "9aeac4f3-ebb1-703e-8d66-274dd189983b"
                  - id: "9bb28458-056a-8a14-afab-8615f7aa0b57"
                    content: "テスト投稿"
                    image_url_list: ["https://s3.ap-northeast-1.wasabisys.com/mastodondb/accounts/avatars/000/005/339/original/d27fbbbd88ea05a4.jpg"]
                    created_at: "2023-10-12T02:13:47.336Z"
                    account_id: "123456789"
                    reply_to: "bc2fca8c-c3d4-5200-edba-58858f596b89"
                    root: "9aeac4f3-ebb1-703e-8d66-274dd189983b"
        "400":
          description: "bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "post bad request"
        "403":
          description: "not authenticated"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "not authenticated"
        "500":
          description: "internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "internal server error"

  "/likes/create/{id}":
    post:
      summary: "create like"
      tags: ["likes"]
      deprecated: false
      security: 
      - Bearer: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Like"
              example: 
                account_id: "123456789"  
                tweet_id: "9bb28458-056a-8a14-afab-8615f7aa0b57"   
        "403":
          description: "not authenticated"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "not authenticated"
        "404":
          description: "not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "account not found"
        "500":
          description: "internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "internal server error"
  
  "/likes/delete/{id}":
    delete:
      summary: "delete like"
      tags: ["likes"]
      deprecated: false
      security: 
      - Bearer: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"
              example: 
                message: "OK!"  
        "403":
          description: "not authenticated"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "not authenticated"
        "404":
          description: "not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "account not found"
        "500":
          description: "internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "internal server error"
  "/follows/create/{id}":
    post:
      summary: "create follows"
      tags: ["follows"]
      deprecated: false
      security: 
      - Bearer: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"
              example: 
                message: "OK!"  
        "403":
          description: "not authenticated"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "not authenticated"
        "404":
          description: "not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "follow account not found"
        "500":
          description: "internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "internal server error"
  "/follows/delete/{id}":
    delete:
      summary: "delete follows"
      tags: ["follows"]
      deprecated: false
      security: 
      - Bearer: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"
              example: 
                message: "OK!"  
        "403":
          description: "not authenticated"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "not authenticated"
        "404":
          description: "not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "follow account not found"
        "500":
          description: "internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "internal server error"
components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      description: Credentials or access token for API
  schemas:
    OkResponse:
      type: object
      properties: 
        message: { type: string }
    ErrorResponse:
      type: object
      properties:
        message: { type: string }
    RegisterAccountPayload:
      type: object
      required:
        - id
        - name
      properties:
        id: { type: string }
        name: { type: string }
    UpdateAccountPayload:
      type: object
      properties:
        name: { type: string }
        description: { type: string }
        image_url: { type: string }
        birth_day: { type: string }
        website_url: { type: string }
    Account:
      type: object
      properties:
        id: { type: string }
        name: { type: string }
        description: { type: string }
        image_url: { type: string }
        birth_day: { type: string }
        website_url: { type: string }
    CreateTweetPayload:
      type: object
      properties:
        content: { type: string }
        image_url_list: 
          type: array
          items: 
            type: string
        account_id: { type: string }
        reply_to: { type: string }
        root: { type: string }
    CreateTweetResponse:
      type: object
      properties:
        id: { type: string }
        content: { type: string }
        image_url_list: 
          type: array
          items: 
            type: string
        created_at: { type: string }
        account_id: { type: string }
        reply_to: { type: string }
        root: { type: string }
    TweetItem:
      type: object
      properties:
        id: { type: string }
        content: { type: string }
        image_url_list: 
          type: array
          items: 
            type: string
        created_at: { type: string }
        account_id: { type: string }
        reply_to: { type: string }
        root: { type: string }
    GetTweetResponse:
      type: object
      properties:
        timeline:
          type: array
          items:
            $ref: "#/components/schemas/TweetItem"
    Like:
      type: object
      properties:
        account_id: { type: string }
        tweet_id: { type: string }
        
        